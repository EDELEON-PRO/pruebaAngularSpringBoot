{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nclass EventBusService {\n  constructor() {\n    this.subject$ = new Subject();\n  }\n  emit(event) {\n    this.subject$.next(event);\n  }\n  on(eventName, action) {\n    return this.subject$.pipe(filter(e => e.name === eventName), map(e => e[\"value\"])).subscribe(action);\n  }\n}\nEventBusService.ɵfac = function EventBusService_Factory(t) {\n  return new (t || EventBusService)();\n};\nEventBusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventBusService,\n  factory: EventBusService.ɵfac,\n  providedIn: 'root'\n});\nexport { EventBusService };","map":{"version":3,"names":["Subject","filter","map","EventBusService","constructor","subject$","emit","event","next","on","eventName","action","pipe","e","name","subscribe","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SoporteTI\\Documents\\EDI\\PRUEBA\\angular-16-jwt-auth-master\\src\\app\\_shared\\event-bus.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { EventData } from './event.class';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventBusService {\n  private subject$ = new Subject<EventData>();\n\n  emit(event: EventData) {\n    this.subject$.next(event);\n  }\n\n  on(eventName: string, action: any): Subscription {\n    return this.subject$.pipe(\n      filter((e: EventData) => e.name === eventName),\n      map((e: EventData) => e[\"value\"])).subscribe(action);\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAsB,MAAM;AAC5C,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;;AAG5C,MAGaC,eAAe;EAH5BC,YAAA;IAIU,KAAAC,QAAQ,GAAG,IAAIL,OAAO,EAAa;;EAE3CM,IAAIA,CAACC,KAAgB;IACnB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,KAAK,CAAC;EAC3B;EAEAE,EAAEA,CAACC,SAAiB,EAAEC,MAAW;IAC/B,OAAO,IAAI,CAACN,QAAQ,CAACO,IAAI,CACvBX,MAAM,CAAEY,CAAY,IAAKA,CAAC,CAACC,IAAI,KAAKJ,SAAS,CAAC,EAC9CR,GAAG,CAAEW,CAAY,IAAKA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAACE,SAAS,CAACJ,MAAM,CAAC;EACxD;;AAXWR,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPf,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}